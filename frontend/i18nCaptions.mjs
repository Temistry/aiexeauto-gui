export const i18nCaptions = {
    "ko": {
        "parseResult": "결과를 파싱중...",
        "preparingDocker": "도커 준비중...",
        "codeGeneratorRulesTitle": "코드 생성 규칙",
        "codeGeneratorRulesDescription": "코드 생성 규칙을 지정합니다.",
        "evaluatorRulesTitle": "작업검증 규칙",
        "evaluatorRulesDescription": "작업검증 규칙을 지정합니다.",
        "customrulestitle": "사용자 규칙",
        "namingMission": "미션 이름 지정",
        "keepDockerContainer": "Docker 컨테이너 유지",
        "keepDockerContainerDescription": "컨테이너를 삭제하지 않고 유지합니다.",
        "reviewMission": "미션 검토",
        "openResultFolder": "결과 폴더 열기",
        "getStartOperation": "임무 수행",
        "language": "언어",
        "missionSolving": "미션수행",
        "configuration": "환경설정",
        "customrules": "사용자 규칙",
        "youtube": "코드깎는노인 유튜브",
        "class": "코드깎는노인 클래스",
        "version": "버전",
        "abortMission": "미션중지",
        "run": "실행",
        "cancel": "취소",
        "promptPlaceholder": "원하는 작업을 입력하세요",
        "promptLabel": "프롬프트",
        "inputFolder": "입력폴더",
        "useLLM": "사용할 LLM",
        "groqAPIKey": "Groq API Key",
        "groqModel": "Groq 모델",
        "claudeAPIKey": "Claude API Key",
        "claudeModel": "Claude Model",
        "deepseekAPIKey": "DeepSeek API Key",
        "deepseekModel": "DeepSeek Model",
        "geminiAPIKey": "Gemini API Key",
        "geminiModel": "Gemini Model",
        "openaiAPIKey": "OpenAI API Key",
        "openaiModel": "OpenAI Model",
        "ollamaModel": "Ollama Model",
        "ollamaEndpoint": "Ollama Endpoint",
        "useDocker": "Docker 사용",
        "dockerPath": "Docker Path",
        "dockerImageName": "Docker Image 이름",
        "autoCodeExecution": "자동 코드 실행",
        "planEditable": "AI 계획 수정",
        "configChangeNotAllowed": "미션 수행중에는 환경설정을 변경할 수 없습니다.",
        "missionDoing": "미션 수행중입니다.",
        "inputFolderPlaceholder": "처리할 파일이 있는 폴더를 선택해주세요.",
        "newVersion": "새로운 버전",
        "isAvailable": "이 버전이 존재합니다.",
        "selectLLM": "사용할 LLM 선택",
        "selectModel": "모델 선택",
        "groqAPIKeyPlaceholder": "Groq API Key 입력",
        "claudeAPIKeyPlaceholder": "Claude API Key 입력",
        "deepseekAPIKeyPlaceholder": "DeepSeek API Key 입력",
        "geminiAPIKeyPlaceholder": "Gemini API Key 입력",
        "openaiAPIKeyPlaceholder": "OpenAI API Key 입력",
        "ollamaModelPlaceholder": "Ollama 모델 이름 입력 (예: qwen2.5:14b, llama3.3:70b)",
        "ollamaModelInfo": "Tools 지원 모델만 사용 가능합니다. 지원 모델 목록",
        "ollamaEndpointPlaceholder": "Ollama API Endpoint 입력 (예: http://localhost:11434)",
        "dockerPathPlaceholder": "Docker Path 입력 (예: /usr/local/bin/docker)",
        "dockerImageNamePlaceholder": "Docker Image 이름 입력",
        "autoCodeExecutionDescription": "체크하면 코드가 자동으로 실행됩니다. 체크하지 않으면 수동으로 실행해야 합니다.",
        "planEditableDescription": "체크하면 AI가 판단한 계획을 수정할 수 있습니다.",
        "clearDataButton": "모든 결과 데이터 제거",
        "openFolderButton": "결과 데이터 폴더 열기",
        "clearDataButtonConfirm": "정말 삭제하시겠습니까?",
        "outputFolderNotFound": "폴더가 존재하지 않습니다.",
        "stopButton": "중지",
        "waiting": "현재 처리를 대기중",
        "missionCompleted": "작업이 완전히 종료되었습니다.",
        "stoppingDockerContainer": "도커 컨테이너를 종료하는 중...",
        "savingResults": "결과를 저장하는 중...",
        "missionAborted": "미션 수행이 중단되었습니다.",
        "cleaningUp": "정리 작업을 수행하는 중...",
        "missionCompletedPeriodMessage": "Mission Completed",
        "missionAbortedPeriodMessage": "Mission Aborted",
        "evaluation": "작업검증",
        "noResult": "❌ 실행결과 출력된 내용이 존재하지 않습니다",
        "codeExecutionAborted": "코드 수행 중단",
        "codeGenerationFailed": "코드 생성 실패",
        "codeGeneration": "코드생성",
        "whatToDo": "다음 계획수립",
        "whatDidWeDo": "작업회고",
        "importingData": "데이터를 가져오는 중...",
        "dockerNotRunning": "도커가 실행중이지 않습니다.",
        "dockerImageNotSet": "도커 이미지가 설정되지 않았습니다.",
        "ollamaModelNotSet": "Ollama 모델이 설정되지 않았습니다.",
        "ollamaServerProblem": "Ollama API서버 확인에 문제가 있습니다.",
        "codeExecutionCompleted": "코드 수행 #{{iterationCount}}차 완료",
        "dockerImageNotFound": "도커 이미지 {{dockerImage}}가 존재하지 않습니다.",
        "nodeFilesInDataSource": "데이터 소스 경로에 Node.js 관련 파일({{file}})이 포함되어 있습니다.",
        "claudeApiKeyNotSet": "Claude API 키가 설정되어 있지 않습니다.",
        "deepseekApiKeyNotSet": "DeepSeek API 키가 설정되어 있지 않습니다.",
        "openaiApiKeyNotSet": "OpenAI API 키가 설정되어 있지 않습니다.",
        "ollamaApiKeyNotSet": "Ollama API 키가 설정되어 있지 않습니다.",
        "groqApiKeyNotSet": "Groq API 키가 설정되어 있지 않습니다.",
        "geminiApiKeyNotSet": "Gemini API 키가 설정되어 있지 않습니다.",
        "dockerPathNotSet": "Docker 경로가 설정되어 있지 않습니다.",
        "ollamaServerNotRunning": "Ollama API 서버 확인에 문제가 있습니다.",
        "aiProcessing": "{{stateLabel}}을 {{model}}이 처리중입니다...",
        "aiMissionAborted": "{{stateLabel}}을 {{model}}이 중단했습니다 ({{errorMessage}})",
        "aiNoResult": "{{model}}이 {{stateLabel}}에 대한 결과가 없습니다.",
        "aiRetryWaiting": "{{model}}이 {{stateLabel}}을 재시도 대기중입니다.",
        "aiAnalyzingResult": "{{stateLabel}}을 분석중입니다...",
        "aiAnalyzingResultFailed": "{{stateLabel}} 분석에 실패했습니다.",
        "aiRetryWaitingSecondLeft": "{{model}}이 {{stateLabel}}을 {{second}}초 후에 재시도 대기중입니다."
    },
    "en": {
        "parseResult": "Parsing result...",
        "preparingDocker": "Preparing Docker...",
        "codeGeneratorRulesTitle": "Code Generator Rules",
        "codeGeneratorRulesDescription": "You can customize the rules for the Code Generator.",
        "evaluatorRulesTitle": "Evaluator Rules",
        "evaluatorRulesDescription": "You can customize the rules for the Evaluator.",
        "customrulestitle": "Custom Rules",
        "namingMission": "Naming Mission",
        "keepDockerContainer": "Keep Docker Container",
        "keepDockerContainerDescription": "Keep the container without deleting it.",
        "reviewMission": "Review Mission",
        "openResultFolder": "Open Result Folder",
        "getStartOperation": "Start Operation",
        "language": "Language",
        "missionSolving": "Mission Solving",
        "configuration": "Configuration",
        "customrules": "Custom Rules",
        "youtube": "cokac YouTube",
        "class": "cokac Class",
        "version": "Version",
        "abortMission": "Abort Mission",
        "run": "Run",
        "cancel": "Cancel",
        "promptPlaceholder": "Enter your task",
        "promptLabel": "Prompt",
        "inputFolder": "Input Folder",
        "useLLM": "Select LLM",
        "groqAPIKey": "Groq API Key",
        "groqModel": "Groq Model",
        "claudeAPIKey": "Claude API Key",
        "claudeModel": "Claude Model",
        "deepseekAPIKey": "DeepSeek API Key",
        "deepseekModel": "DeepSeek Model",
        "geminiAPIKey": "Gemini API Key",
        "geminiModel": "Gemini Model",
        "openaiAPIKey": "OpenAI API Key",
        "openaiModel": "OpenAI Model",
        "ollamaModel": "Ollama Model",
        "ollamaEndpoint": "Ollama Endpoint",
        "useDocker": "Use Docker",
        "dockerPath": "Docker Path",
        "dockerImageName": "Docker Image Name",
        "autoCodeExecution": "Auto Code Execution",
        "planEditable": "Editable AI Plan",
        "configChangeNotAllowed": "Mission is doing, so you can't change the configuration.",
        "missionDoing": "Mission is doing.",
        "inputFolderPlaceholder": "Select the folder that contains the files you want to process.",
        "newVersion": "New Version",
        "isAvailable": "This version is available.",
        "selectLLM": "Select LLM",
        "selectModel": "Select Model",
        "groqAPIKeyPlaceholder": "Enter Groq API Key",
        "claudeAPIKeyPlaceholder": "Enter Claude API Key",
        "deepseekAPIKeyPlaceholder": "Enter DeepSeek API Key",
        "geminiAPIKeyPlaceholder": "Enter Gemini API Key",
        "openaiAPIKeyPlaceholder": "Enter OpenAI API Key",
        "ollamaModelPlaceholder": "Enter Ollama Model Name (e.g., qwen2.5:14b, llama3.3:70b)",
        "ollamaModelInfo": "Only models that support Tools are available. List of supported models",
        "ollamaEndpointPlaceholder": "Enter Ollama API Endpoint (e.g., http://localhost:11434)",
        "dockerPathPlaceholder": "Enter Docker Path (e.g., /usr/local/bin/docker)",
        "dockerImageNamePlaceholder": "Enter Docker Image Name",
        "autoCodeExecutionDescription": "Check this to run the code automatically. Uncheck this to run manually.",
        "planEditableDescription": "Check this to edit the AI plan.",
        "clearDataButton": "Clear All Output Data",
        "openFolderButton": "Open Output Data Folder",
        "clearDataButtonConfirm": "Are you sure you want to delete all output data?",
        "outputFolderNotFound": "Folder not found.",
        "stopButton": "Stop",
        "waiting": "Waiting for current processing",
        "missionCompleted": "Operation has been completed.",
        "stoppingDockerContainer": "Stopping Docker container...",
        "savingResults": "Saving results...",
        "missionAborted": "Operation has been aborted.",
        "cleaningUp": "Performing cleanup...",
        "missionCompletedPeriodMessage": "Mission Completed",
        "missionAbortedPeriodMessage": "Mission Aborted",
        "evaluation": "Task Validation",
        "noResult": "❌ No output was generated from execution",
        "codeExecutionAborted": "Code execution aborted",
        "codeGenerationFailed": "Code generation failed",
        "codeGeneration": "Code Generation",
        "whatToDo": "Planning Next Steps",
        "whatDidWeDo": "Task Review",
        "importingData": "Importing data...",
        "dockerNotRunning": "Docker is not running.",
        "dockerImageNotSet": "Docker image is not set.",
        "ollamaModelNotSet": "Ollama model is not set.",
        "ollamaServerProblem": "There is a problem with the Ollama API server.",
        "codeExecutionCompleted": "Code execution #{{iterationCount}} completed",
        "dockerImageNotFound": "Docker image {{dockerImage}} does not exist.",
        "nodeFilesInDataSource": "Node.js related file ({{file}}) is included in the data source path.",
        "claudeApiKeyNotSet": "Claude API key is not set.",
        "deepseekApiKeyNotSet": "DeepSeek API key is not set.",
        "openaiApiKeyNotSet": "OpenAI API key is not set.",
        "ollamaApiKeyNotSet": "Ollama API key is not set.",
        "groqApiKeyNotSet": "Groq API key is not set.",
        "geminiApiKeyNotSet": "Gemini API key is not set.",
        "dockerPathNotSet": "Docker path is not set.",
        "ollamaServerNotRunning": "Ollama API server check has a problem.",
        "aiProcessing": "{{stateLabel}} is being processed by {{model}}...",
        "aiMissionAborted": "{{stateLabel}} has been aborted by {{model}} ({{errorMessage}})",
        "aiNoResult": "{{model}} has no result for {{stateLabel}}",
        "aiRetryWaiting": "{{model}} is waiting for retry of {{stateLabel}}",
        "aiAnalyzingResult": "{{stateLabel}} is being analyzed...",
        "aiAnalyzingResultFailed": "{{stateLabel}} analysis failed",
        "aiRetryWaitingSecondLeft": "{{model}} is waiting for retry of {{stateLabel}} {{second}} seconds left"
    },
    "ja": {
        "parseResult": "結果を解析中...",
        "preparingDocker": "Dockerを準備中...",
        "codeGeneratorRulesTitle": "コード生成ルール",
        "codeGeneratorRulesDescription": "コード生成ルールを指定します。",
        "evaluatorRulesTitle": "評価ルール",
        "evaluatorRulesDescription": "評価ルールを指定します。",
        "customrulestitle": "カスタムルール",
        "namingMission": "ミッション名の命名",
        "keepDockerContainer": "Docker コンテナを維持",
        "keepDockerContainerDescription": "コンテナを削除せずに維持します。",
        "reviewMission": "ミッション 検討",
        "openResultFolder": "結果フォルダーを開く",
        "getStartOperation": "操作を開始",
        "language": "言語",
        "missionSolving": "ミッション実行",
        "configuration": "設定",
        "customrules": "カスタムルール",
        "youtube": "cokac YouTube",
        "class": "cokac Class",
        "version": "バージョン",
        "abortMission": "ミッション中止",
        "run": "実行",
        "cancel": "キャンセル",
        "promptPlaceholder": "実行したい作業を入力してください",
        "promptLabel": "プロンプト",
        "inputFolder": "入力フォルダー",
        "useLLM": "使用するLLM",
        "groqAPIKey": "Groq APIキー",
        "groqModel": "Groqモデル",
        "claudeAPIKey": "Claude APIキー",
        "claudeModel": "Claudeモデル",
        "deepseekAPIKey": "DeepSeek APIキー",
        "deepseekModel": "DeepSeekモデル",
        "geminiAPIKey": "Gemini APIキー",
        "geminiModel": "Geminiモデル",
        "openaiAPIKey": "OpenAI APIキー",
        "openaiModel": "OpenAIモデル",
        "ollamaModel": "Ollamaモデル",
        "ollamaEndpoint": "Ollamaエンドポイント",
        "useDocker": "Dockerの使用",
        "dockerPath": "Dockerパス",
        "dockerImageName": "Dockerイメージ名",
        "autoCodeExecution": "自動コード実行",
        "planEditable": "AI計画の編集",
        "configChangeNotAllowed": "ミッション実行中に設定を変更することはできません。",
        "missionDoing": "ミッション実行中です。",
        "inputFolderPlaceholder": "処理するファイルがあるフォルダーを選択してください。",
        "newVersion": "新しいバージョン",
        "isAvailable": "このバージョンは存在します。",
        "selectLLM": "使用するLLMを選択",
        "selectModel": "モデルを選択",
        "groqAPIKeyPlaceholder": "Groq APIキーを入力",
        "claudeAPIKeyPlaceholder": "Claude APIキーを入力",
        "deepseekAPIKeyPlaceholder": "DeepSeek APIキーを入力",
        "geminiAPIKeyPlaceholder": "Gemini APIキーを入力",
        "openaiAPIKeyPlaceholder": "OpenAI APIキーを入力",
        "ollamaModelPlaceholder": "Ollama モデル名を入力 (例: qwen2.5:14b, llama3.3:70b)",
        "ollamaModelInfo": "Tools サポートモデルのみ使用可能です。サポートモデルのリスト",
        "ollamaEndpointPlaceholder": "Ollama API エンドポイントを入力 (例: http://localhost:11434)",
        "dockerPathPlaceholder": "Docker パスを入力 (例: /usr/local/bin/docker)",
        "dockerImageNamePlaceholder": "Docker イメージ名を入力",
        "autoCodeExecutionDescription": "チェックするとコードが自動的に実行されます。チェックしないと手動で実行する必要があります。",
        "planEditableDescription": "チェックするとAIが判断した計画を編集できます。",
        "clearDataButton": "全ての出力データを削除",
        "openFolderButton": "出力データフォルダーを開く",
        "clearDataButtonConfirm": "本当に全ての出力データを削除しますか？",
        "outputFolderNotFound": "フォルダーが見つかりません。",
        "stopButton": "停止",
        "waiting": "現在の処理を待っています",
        "missionCompleted": "ミッションが完全に終了しました。",
        "stoppingDockerContainer": "Dockerコンテナを停止中...",
        "savingResults": "結果を保存中...",
        "missionAborted": "ミッションが中断されました",
        "cleaningUp": "クリーンアップ作業を実行中...",
        "missionCompletedPeriodMessage": "ミッション完了",
        "missionAbortedPeriodMessage": "ミッション中断",
        "evaluation": "作業検証",
        "noResult": "❌ 実行結果の出力がありません",
        "codeExecutionAborted": "コード実行中断",
        "codeGenerationFailed": "コード生成失敗",
        "codeGeneration": "コード生成",
        "whatToDo": "次の計画立案",
        "whatDidWeDo": "作業の振り返り",
        "importingData": "データをインポート中...",
        "dockerNotRunning": "Dockerが実行されていません",
        "dockerImageNotSet": "Dockerイメージが設定されていません",
        "ollamaModelNotSet": "Ollamaモデルが設定されていません",
        "ollamaServerProblem": "Ollama APIサーバーの確認に問題があります",
        "codeExecutionCompleted": "コード実行 #{{iterationCount}}回目完了",
        "dockerImageNotFound": "Dockerイメージ {{dockerImage}}が存在しません",
        "nodeFilesInDataSource": "データソースパスにNode.js関連ファイル({{file}})が含まれています",
        "claudeApiKeyNotSet": "Claude APIキーが設定されていません。",
        "deepseekApiKeyNotSet": "DeepSeek APIキーが設定されていません。",
        "openaiApiKeyNotSet": "OpenAI APIキーが設定されていません。",
        "ollamaApiKeyNotSet": "Ollama APIキーが設定されていません。",
        "groqApiKeyNotSet": "Groq APIキーが設定されていません。",
        "geminiApiKeyNotSet": "Gemini APIキーが設定されていません。",
        "dockerPathNotSet": "Dockerパスが設定されていません。",
        "ollamaServerNotRunning": "Ollama APIサーバーの確認に問題があります。",
        "aiProcessing": "{{stateLabel}}を{{model}}が処理中です...",
        "aiMissionAborted": "{{stateLabel}}を{{model}}が中断しました ({{errorMessage}})",
        "aiNoResult": "{{model}}が{{stateLabel}}の結果を出力できませんでした。",
        "aiRetryWaiting": "{{model}}が{{stateLabel}}を再試行待ちです。",
        "aiAnalyzingResult": "{{stateLabel}}を分析中です...",
        "aiAnalyzingResultFailed": "{{stateLabel}}の分析に失敗しました。",
        "aiRetryWaitingSecondLeft": "{{model}}が{{stateLabel}}を{{second}}秒後に再試行します。"
    },
    "vi": {
        "parseResult": "Đang phân tích kết quả...",
        "preparingDocker": "Chuẩn bị Docker...",
        "codeGeneratorRulesTitle": "Quy tắc tạo mã",
        "codeGeneratorRulesDescription": "Bạn có thể tùy chỉnh các quy tắc cho việc tạo mã.",
        "evaluatorRulesTitle": "Quy tắc đánh giá",
        "evaluatorRulesDescription": "Bạn có thể tùy chỉnh các quy tắc cho việc đánh giá.",
        "customrulestitle": "Quy tắc tùy chỉnh",
        "namingMission": "Đặt tên cho nhiệm vụ",
        "keepDockerContainer": "Giữ Container Docker",
        "keepDockerContainerDescription": "Giữ container Docker mà không xóa nó.",
        "reviewMission": "Đánh giá công việc",
        "openResultFolder": "Mở Thư mục Kết quả",
        "getStartOperation": "Bắt đầu Nhiệm vụ",
        "language": "Ngôn ngữ",
        "missionSolving": "Thực hiện Nhiệm vụ",
        "configuration": "Cấu hình",
        "customrules": "Quy tắc tùy chỉnh",
        "youtube": "cokac YouTube",
        "class": "cokac Class",
        "version": "Phiên bản",
        "abortMission": "Hủy Nhiệm vụ",
        "run": "Chạy",
        "cancel": "Hủy",
        "promptPlaceholder": "Nhập công việc bạn muốn thực hiện",
        "promptLabel": "Phản hồi",
        "inputFolder": "Thư mục Nhập",
        "useLLM": "Chọn LLM",
        "groqAPIKey": "Khóa API Groq",
        "groqModel": "Mô hình Groq",
        "claudeAPIKey": "Khóa API Claude",
        "claudeModel": "Mô hình Claude",
        "deepseekAPIKey": "Khóa API DeepSeek",
        "deepseekModel": "Mô hình DeepSeek",
        "geminiAPIKey": "Khóa API Gemini",
        "geminiModel": "Mô hình Gemini",
        "openaiAPIKey": "Khóa API OpenAI",
        "openaiModel": "Mô hình OpenAI",
        "ollamaModel": "Mô hình Ollama",
        "ollamaEndpoint": "Đầu mối Ollama",
        "useDocker": "Sử dụng Docker",
        "dockerPath": "Đường dẫn Docker",
        "dockerImageName": "Tên Docker Image",
        "autoCodeExecution": "Thực thi mã tự động",
        "planEditable": "Chỉnh sửa kế hoạch AI",
        "configChangeNotAllowed": "Đang thực hiện nhiệm vụ, không thể thay đổi cấu hình.",
        "missionDoing": "Đang thực hiện nhiệm vụ.",
        "inputFolderPlaceholder": "Chọn thư mục chứa các tệp tin bạn muốn xử lý.",
        "newVersion": "Phiên bản mới",
        "isAvailable": "Phiên bản này tồn tại.",
        "selectLLM": "Chọn LLM",
        "selectModel": "Chọn Mô hình",
        "groqAPIKeyPlaceholder": "Nhập Khóa API Groq",
        "claudeAPIKeyPlaceholder": "Nhập Khóa API Claude",
        "deepseekAPIKeyPlaceholder": "Nhập Khóa API DeepSeek",
        "geminiAPIKeyPlaceholder": "Nhập Khóa API Gemini",
        "openaiAPIKeyPlaceholder": "Nhập Khóa API OpenAI",
        "ollamaModelPlaceholder": "Nhập Tên Mô hình Ollama (ví dụ: qwen2.5:14b, llama3.3:70b)",
        "ollamaModelInfo": "Chỉ các mô hình hỗ trợ công cụ mới sử dụng được. Danh sách các mô hình hỗ trợ",
        "ollamaEndpointPlaceholder": "Nhập Điểm cuối API Ollama (ví dụ: http://localhost:11434)",
        "dockerPathPlaceholder": "Nhập Đường dẫn Docker (ví dụ: /usr/local/bin/docker)",
        "dockerImageNamePlaceholder": "Nhập Tên Hình Ảnh Docker",
        "autoCodeExecutionDescription": "Kiểm tra để chạy mã tự động. Bỏ kiểm tra để chạy tay.",
        "planEditableDescription": "Kiểm tra để chỉnh sửa kế hoạch AI.",
        "clearDataButton": "Xóa tất cả dữ liệu kết quả",
        "openFolderButton": "Mở thư mục dữ liệu kết quả",
        "clearDataButtonConfirm": "Bạn có chắc chắn muốn xóa tất cả dữ liệu kết quả không?",
        "outputFolderNotFound": "Thư mục không tồn tại.",
        "stopButton": "Dừng",
        "waiting": "Đang chờ xử lý hiện tại",
        "missionCompleted": "Nhiệm vụ đã hoàn thành.",
        "stoppingDockerContainer": "Đang dừng container Docker...",
        "savingResults": "Đang lưu kết quả...",
        "missionAborted": "Nhiệm vụ đã bị hủy bỏ.",
        "cleaningUp": "Đang dọn dẹp...",
        "missionCompletedPeriodMessage": "Nhiệm Vụ Hoàn Thành",
        "missionAbortedPeriodMessage": "Nhiệm Vụ Bị Hủy",
        "evaluation": "Đánh giá công việc",
        "noResult": "❌ Không có kết quả đầu ra",
        "codeExecutionAborted": "Thực thi mã đã bị hủy",
        "codeGenerationFailed": "Tạo mã thất bại",
        "codeGeneration": "Đang tạo mã",
        "whatToDo": "Lập kế hoạch tiếp theo",
        "whatDidWeDo": "Đánh giá công việc đã làm",
        "importingData": "Đang nhập dữ liệu...",
        "dockerNotRunning": "Docker không hoạt động.",
        "dockerImageNotSet": "Chưa thiết lập Docker image.",
        "ollamaModelNotSet": "Chưa thiết lập mô hình Ollama.",
        "ollamaServerProblem": "Có vấn đề với máy chủ API Ollama.",
        "codeExecutionCompleted": "Hoàn thành thực thi mã lần #{{iterationCount}}",
        "dockerImageNotFound": "Không tìm thấy Docker image {{dockerImage}}",
        "nodeFilesInDataSource": "Tệp Node.js ({{file}}) được tìm thấy trong đường dẫn nguồn dữ liệu",
        "claudeApiKeyNotSet": "Chưa thiết lập khóa API Claude.",
        "deepseekApiKeyNotSet": "Chưa thiết lập khóa API DeepSeek.",
        "openaiApiKeyNotSet": "Chưa thiết lập khóa API OpenAI.",
        "ollamaApiKeyNotSet": "Chưa thiết lập khóa API Ollama.",
        "groqApiKeyNotSet": "Chưa thiết lập khóa API Groq.",
        "geminiApiKeyNotSet": "Chưa thiết lập khóa API Gemini.",
        "dockerPathNotSet": "Chưa thiết lập đường dẫn Docker.",
        "ollamaServerNotRunning": "Có vấn đề khi kiểm tra máy chủ API Ollama.",
        "aiProcessing": "{{model}} đang xử lý {{stateLabel}}...",
        "aiMissionAborted": "{{model}} đã dừng {{stateLabel}} ({{errorMessage}})",
        "aiNoResult": "{{model}} không có kết quả cho {{stateLabel}}.",
        "aiRetryWaiting": "{{model}} đang chờ thử lại {{stateLabel}}.",
        "aiAnalyzingResult": "Đang phân tích {{stateLabel}}...",
        "aiAnalyzingResultFailed": "Phân tích {{stateLabel}} thất bại.",
        "aiRetryWaitingSecondLeft": "{{model}} sẽ thử lại {{stateLabel}} sau {{second}} giây."
    },
    "zh": {
        "parseResult": "正在解析结果...",
        "preparingDocker": "准备Docker...",
        "codeGeneratorRulesTitle": "代码生成规则",
        "codeGeneratorRulesDescription": "您可以自定义代码生成规则。",
        "evaluatorRulesTitle": "工作验证规则",
        "evaluatorRulesDescription": "您可以自定义工作验证规则。",
        "customrulestitle": "自定义规则",
        "namingMission": "任务命名",
        "keepDockerContainer": "保持Docker容器",
        "keepDockerContainerDescription": "不删除容器。",
        "reviewMission": "任务审查",
        "openResultFolder": "打开结果文件夹",
        "getStartOperation": "开始任务",
        "language": "语言",
        "missionSolving": "执行任务",
        "configuration": "设置",
        "customrules": "自定义规则",
        "youtube": "代码老人YouTube",
        "class": "代码老人课程",
        "version": "版本",
        "abortMission": "中止任务",
        "run": "运行",
        "cancel": "取消",
        "promptPlaceholder": "请输入您想要执行的任务",
        "promptLabel": "提示",
        "inputFolder": "输入文件夹",
        "useLLM": "使用的LLM",
        "groqAPIKey": "Groq API密钥",
        "groqModel": "Groq模型",
        "claudeAPIKey": "Claude API密钥",
        "claudeModel": "Claude模型",
        "deepseekAPIKey": "DeepSeek API密钥",
        "deepseekModel": "DeepSeek模型",
        "geminiAPIKey": "Gemini API密钥",
        "geminiModel": "Gemini模型",
        "openaiAPIKey": "OpenAI API密钥",
        "openaiModel": "OpenAI模型",
        "ollamaModel": "Ollama模型",
        "ollamaEndpoint": "Ollama端点",
        "useDocker": "使用Docker",
        "dockerPath": "Docker路径",
        "dockerImageName": "Docker镜像名称",
        "autoCodeExecution": "自动代码执行",
        "planEditable": "AI计划可编辑",
        "configChangeNotAllowed": "任务执行期间无法更改设置",
        "missionDoing": "正在执行任务",
        "inputFolderPlaceholder": "请选择包含要处理文件的文件夹",
        "newVersion": "新版本",
        "isAvailable": "此版本可用",
        "selectLLM": "选择要使用的LLM",
        "selectModel": "选择模型",
        "groqAPIKeyPlaceholder": "输入Groq API密钥",
        "claudeAPIKeyPlaceholder": "输入Claude API密钥",
        "deepseekAPIKeyPlaceholder": "输入DeepSeek API密钥",
        "geminiAPIKeyPlaceholder": "输入Gemini API密钥",
        "openaiAPIKeyPlaceholder": "输入OpenAI API密钥",
        "ollamaModelPlaceholder": "输入Ollama模型名称（例如：qwen2.5:14b, llama3.3:70b）",
        "ollamaModelInfo": "仅支持工具的模型可用。支持的模型列表",
        "ollamaEndpointPlaceholder": "输入Ollama API端点（例如：http://localhost:11434）",
        "dockerPathPlaceholder": "输入Docker路径（例如：/usr/local/bin/docker）",
        "dockerImageNamePlaceholder": "输入Docker镜像名称",
        "autoCodeExecutionDescription": "选中则代码将自动执行。未选中则需要手动执行。",
        "planEditableDescription": "选中则可以编辑AI制定的计划。",
        "clearDataButton": "清除所有输出数据",
        "openFolderButton": "打开输出数据文件夹",
        "clearDataButtonConfirm": "确定要删除吗？",
        "outputFolderNotFound": "文件夹不存在",
        "stopButton": "停止",
        "waiting": "等待当前处理",
        "missionCompleted": "任务已完全完成",
        "stoppingDockerContainer": "正在停止Docker容器...",
        "savingResults": "正在保存结果...",
        "missionAborted": "任务已中止",
        "cleaningUp": "正在清理...",
        "missionCompletedPeriodMessage": "任务完成",
        "missionAbortedPeriodMessage": "任务中止",
        "evaluation": "工作验证",
        "noResult": "❌ 没有执行结果输出",
        "codeExecutionAborted": "代码执行中止",
        "codeGenerationFailed": "代码生成失败",
        "codeGeneration": "代码生成",
        "whatToDo": "制定下一步计划",
        "whatDidWeDo": "工作回顾",
        "importingData": "正在导入数据...",
        "dockerNotRunning": "Docker未运行",
        "dockerImageNotSet": "未设置Docker镜像",
        "ollamaModelNotSet": "未设置Ollama模型",
        "ollamaServerProblem": "Ollama API服务器检查出现问题",
        "codeExecutionCompleted": "代码执行第{{iterationCount}}次完成",
        "dockerImageNotFound": "Docker镜像{{dockerImage}}不存在",
        "nodeFilesInDataSource": "数据源路径中包含Node.js相关文件({{file}})",
        "claudeApiKeyNotSet": "未设置Claude API密钥",
        "deepseekApiKeyNotSet": "未设置DeepSeek API密钥",
        "openaiApiKeyNotSet": "未设置OpenAI API密钥",
        "ollamaApiKeyNotSet": "未设置Ollama API密钥",
        "groqApiKeyNotSet": "未设置Groq API密钥",
        "geminiApiKeyNotSet": "未设置Gemini API密钥",
        "dockerPathNotSet": "未设置Docker路径",
        "ollamaServerNotRunning": "Ollama API服务器检查出现问题",
        "aiProcessing": "{{model}}正在处理{{stateLabel}}...",
        "aiMissionAborted": "{{model}}已中止{{stateLabel}}（{{errorMessage}}）",
        "aiNoResult": "{{model}}没有{{stateLabel}}的结果",
        "aiRetryWaiting": "{{model}}正在等待重试{{stateLabel}}",
        "aiAnalyzingResult": "正在分析{{stateLabel}}...",
        "aiAnalyzingResultFailed": "{{stateLabel}}分析失败",
        "aiRetryWaitingSecondLeft": "{{model}}将在{{second}}秒后重试{{stateLabel}}"
    },

};
